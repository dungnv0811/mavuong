-- Optional explicit schema to control column types for H2 and ensure element collections match design

CREATE TABLE IF NOT EXISTS doctors (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(50),
    qualifications VARCHAR(255),
    average_rating DECIMAL(3,2) DEFAULT 0.0,
    total_reviews INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS doctor_specialties (
    id BIGINT PRIMARY KEY,
    doctor_id BIGINT NOT NULL,
    specialty_type VARCHAR(100) NOT NULL,
    keywords VARCHAR(1000),
    description VARCHAR(1000),
    CONSTRAINT fk_doctor_specialties_doctor FOREIGN KEY (doctor_id) REFERENCES doctors(id)
);

CREATE TABLE IF NOT EXISTS doctor_schedules (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    doctor_id BIGINT NOT NULL,
    day_of_week VARCHAR(20) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    appointment_duration INT DEFAULT 30,
    is_day_off BOOLEAN,
    holiday_date DATE,
    CONSTRAINT fk_doctor_schedules_doctor FOREIGN KEY (doctor_id) REFERENCES doctors(id)
);

CREATE TABLE IF NOT EXISTS appointments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id BIGINT NOT NULL,
    doctor_id BIGINT NOT NULL,
    appointment_date_time TIMESTAMP NOT NULL,
    duration_minutes INT DEFAULT 30,
    notes VARCHAR(2000),
    status VARCHAR(20) DEFAULT 'PENDING',
    time_zone VARCHAR(50) DEFAULT 'UTC',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS symptom_analyses (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id BIGINT NOT NULL,
    description VARCHAR(2000) NOT NULL,
    keywords VARCHAR(1000),
    analyzed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE TABLE IF NOT EXISTS recommendations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    analysis_id BIGINT NOT NULL,
    specialty VARCHAR(100) NOT NULL,
    confidence DECIMAL(3,2),
    suggested_doctor_ids VARCHAR(1000)
);

CREATE TABLE IF NOT EXISTS doctor_ratings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    doctor_id BIGINT NOT NULL,
    patient_id BIGINT NOT NULL,
    stars INT,
    feedback VARCHAR(1000)
);


